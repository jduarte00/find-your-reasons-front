{"version":3,"sources":["Components/HomeComponents/Hero.js","Components/HomeComponents/Services.js","Components/HomeComponents/MainChart.js","Components/HomeComponents/KPI.js","Components/HomeComponents/Footer.js","Components/HomeComponents/Home.js","Components/LoginComponents/auth-service.js","Components/LoginComponents/Login.js","Components/LoginComponents/Signup.js","Components/Layout/Breadcrumb.js","Components/Layout/Panel/MainPage.js","Components/Layout/NewApp/TheForm.js","Components/Layout/NewApp/Message.js","Components/Layout/NewApp/MainForm.js","Components/Layout/Profile/UserProfile.js","Components/Layout/ViewApp/ViewApp.js","Components/Layout/Topbar.js","Components/Layout/Sidebar.js","Components/Layout/NewMonth/TheForm.js","Components/Layout/NewMonth/NewMonth.js","Components/Layout/MyLayout.js","Components/HomeComponents/WrongRoute.js","App.js","serviceWorker.js","index.js"],"names":["Hero","makeHamburger","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","react_default","a","createElement","className","href","data-target","id","this","Component","Services","data","labels","datasets","label","backgroundColor","MainChart","es","options","mantainAspectRatio","scales","yAxes","ticks","callback","value","index","values","parseInt","toString","replace","KPI","style","background","padding","row","gutter","col","span","card","statistic","title","precision","valueStyle","color","prefix","icon","type","suffix","Footer","Home","Hero_Hero","AuthService","_this","Object","classCallCheck","signup","username","password","service","post","then","response","loggedin","get","login","logout","axios","create","baseURL","withCredentials","Login","props","possibleConstructorReturn","getPrototypeOf","handleChange","event","_event$target","name","setState","defineProperty","handleSubmit","e","preventDefault","form","validateFields","err","state","redirect","getUser","catch","error","errorLoginIn","getFieldDecorator","Redirect","to","es_form","onSubmit","Item","rules","required","message","input","placeholder","onChange","es_button","htmlType","WrappedNormalLoginForm","Form","Signup","console","log","class","WrappedNormalSignupForm","MyBreadcrumb","allBreads","routes","map","item","current","breadcrumb","key","margin","textAlign","Title","Typography","MainPage","Paragraph","Text","makeKpiInfo","theData","valueIndicators","incomeDifference","Math","abs","expensesDifference","usersDifference","contentList","income","expenses","users","makeMainChartData","dataMainChart","mainGraphArray","makeExpensesChartData","dataExpensesChart","expensesGraphArray","dataSeries","hoverBackgroundColor","getRegisteredCompanies","noData","noMonths","userApps","onTabChange","componentDidMount","deleteApp","appid","delete","concat","theIndex","user","theUser","columns","dataIndex","align","render","theId","onClick","changeRoute","Id","arguments","undefined","tabList","tab","_this2","Fragment","marginTop","level","fontSize","divider","orientation","table","dataSource","tableData","size","allIncomes","allExpenses","allUsers","beginAtZero","height","activeTabKey","Option","Select","TheFormClass","confirmDirty","typeOfApp","confirmation","idDynamic","validateFieldsAndScroll","infoToSend","getFieldsValue","statusNewApp","resetFields","remove","k","keys","getFieldValue","setFieldsValue","filter","add","nextKeys","_this$props$form","toggleAppGenerationType","formItemLayoutWithOutLabel","wrapperCol","xs","offset","sm","formItemLayoutDynamic","labelCol","initialValue","formItems","assign","validateTrigger","whitespace","width","marginRight","disabled","hasFeedback","es_select","tooltip","es_radio","Group","Button","mode","input_number","min","TheForm","Message","es_alert","showIcon","banner","typeOfMessage","closable","MainForm","displayConfirmation","success","changeStatusNewApp","status","NewApp_TheForm","UserProfileForm","newPassword","errorChanging","ViewApp","createGraphsArrays","appData","mainChartData","dataLabels","borderColor","borderWidth","hoverBorderColor","incomeDataSeries","expensesDataSeries","userGraphData","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","usersDataSeries","forecastData","forecast","forecastSeries","mainGraphData","forecastGraphData","createKpiCard","content","userDifference","getTheAppData","appID","appName","theApp","componentWillMount","ViewApp_Title","months","tableDisplayArray","ViewApp_Text","responsive","kpiError","incomeGeneration","dayOfCreation","monthOfCreation","yearOfCreation","sellingPrice","totalCostOfDevelopment","theme","twoToneColor","Header","Layout","Topbar","logoutUser","getTheUser","loggedInUser","userMenu","menu","rel","display","justifyContent","alignItems","dropdown","overlay","Sider","Menu","SubMenu","Sidebar","collapsible","collapsed","onCollapse","handleOnCollapse","defaultSelectedKeys","paddingLeft","selected","MonthPicker","DatePicker","nameOfAppsArray","selectedApp","selectedMonth","selectedYear","usersOfApp","nameMonth","month","year","now","Date","statusNewMonth","getAppNamesTypeAndUsers","selApp","objectApp","appObject","TheForm_Option","split","changeStatusNewMonth","NewMonth_TheForm","Content","MyLayout","updatePredicate","isSmall","window","innerWidth","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","objectSpread","currentRoute","layout","minHeight","nameOfApps","breakpoint","collapsedWidth","Topbar_Topbar","logoutUserTwo","theContent","MainPage_MainPage","MainForm_MainForm","NewMonth_MainForm","UserProfile_UserProfileForm","ViewApp_ViewApp","MyLayout_Footer","WrongRoute","src","alt","maxHeight","App","fetchUser","userObj","changeCurrentRoute","route","currentPath","idApp","Switch","Route","exact","path","component","MyLayout_MyLayout","LoginComponents_Login","LoginComponents_Signup","Boolean","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33d2b462.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Hero extends Component {\r\n  makeHamburger = () => {\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n      // Get all \"navbar-burger\" elements\r\n      const $navbarBurgers = Array.prototype.slice.call(\r\n        document.querySelectorAll(\".navbar-burger\"),\r\n        0\r\n      );\r\n\r\n      // Check if there are any navbar burgers\r\n      if ($navbarBurgers.length > 0) {\r\n        // Add a click event on each of them\r\n        $navbarBurgers.forEach(el => {\r\n          el.addEventListener(\"click\", () => {\r\n            // Get the target from the \"data-target\" attribute\r\n            const target = el.dataset.target;\r\n            const $target = document.getElementById(target);\r\n\r\n            // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n            el.classList.toggle(\"is-active\");\r\n            $target.classList.toggle(\"is-active\");\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero is-info is-medium\">\r\n        <div className=\"hero-head\">\r\n          <nav className=\"navbar\">\r\n            <div className=\"container\">\r\n              <div className=\"navbar-brand\">\r\n                <a className=\"navbar-item\" href=\"/\">\r\n                  <span className=\"is-size-2\">\r\n                    KYR{\" \"}\r\n                    <span className=\"icon is-large theicon\">\r\n                      <i className=\"fas fa-chart-line \" />\r\n                    </span>\r\n                  </span>\r\n                </a>\r\n                <span\r\n                  className=\"navbar-burger burger\"\r\n                  data-target=\"navbarMenuHeroA\"\r\n                >\r\n                  <span />\r\n                  <span />\r\n                  <span />\r\n                </span>\r\n              </div>\r\n              <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\r\n                <div className=\"navbar-end\">\r\n                  <a className=\"navbar-item is-active\" href=\"/\">\r\n                    Home\r\n                  </a>\r\n                  <a className=\"navbar-item\" href=\"/signin\">\r\n                    Sign In\r\n                  </a>\r\n                  <a className=\"navbar-item\" href=\"/signup\">\r\n                    Sign Up\r\n                  </a>\r\n                  <span className=\"navbar-item\">\r\n                    <a\r\n                      className=\"button is-primary is-inverted\"\r\n                      href=\"https://github.com/jduarte00\"\r\n                    >\r\n                      <span className=\"icon\">\r\n                        <i className=\"fab fa-github\" />\r\n                      </span>\r\n                      <span>My Code :)</span>\r\n                    </a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"hero-body\">\r\n          <div className=\"container has-text-centered\">\r\n            <h1 className=\"title\">Know Your Reasons</h1>\r\n            <h2 className=\"subtitle\">\r\n              We belive every business have the potential to be big. You just\r\n              need the right intel...\r\n            </h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hero-foot\">\r\n          <nav className=\"tabs\">\r\n            <div className=\"container\">\r\n              <ul>\r\n                <li>\r\n                  <a href=\"#services-section\">Services</a>\r\n                </li>\r\n\r\n                <li>\r\n                  <a href=\"#main-chart\">Visualization</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#kpi-section\">Benchmarking</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n        {this.makeHamburger()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Services() {\r\n  return (\r\n    <div className=\"container services-section\" id=\"services-section\">\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-half\">\r\n          <h1 className=\"is-size-2 is-size-4-mobile service-section-description\">\r\n            Wide number of finantial ratios and indicators to help you to know\r\n            your business\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns\">\r\n        <div className=\"column\">\r\n          <i className=\"fas fa-sort-numeric-down fa-4x\" />\r\n          <hr />\r\n          <h3>Total Income</h3>\r\n          <hr />\r\n          <p className=\"is-family-monospace\">\r\n            It doesn't matter how many apps you have, we help you keep track of\r\n            you total income regardless of the number of users or the way you\r\n            generate income.\r\n          </p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <i className=\"fas fa-chart-pie fa-4x\" />\r\n          <hr />\r\n          <h3>Total Expenses</h3>\r\n          <hr />\r\n          <p className=\"is-family-monospace\">\r\n            Controlling your expenses is an important part of your career, we\r\n            help you know how much you spent on each category.\r\n          </p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <i className=\"fas fa-piggy-bank fa-4x\" />\r\n          <hr />\r\n          <h3>Total Users</h3>\r\n          <hr />\r\n          <p className=\"is-family-monospace\">\r\n            Look at trends and be able to know if your database of users is\r\n            growing or not, so you can implement the right measures at the right\r\n            time\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: [\"Income\", \"Expenses\", \"Users\", \"Total Revenue\"],\r\n  datasets: [\r\n    {\r\n      label: \"My App 1\",\r\n      data: [617594, 181045, 153060, 106519],\r\n      backgroundColor: \"rgba(255, 99, 132, 0.6)\"\r\n    },\r\n    {\r\n      label: \"My App 2\",\r\n      data: [417594, 281045, 753060, 306519],\r\n      backgroundColor: \"rgba(0, 99, 132, 0.6)\"\r\n    },\r\n    {\r\n      label: \"My App 3\",\r\n      data: [217594, 681045, 353060, 906519],\r\n      backgroundColor: \"rgba(100, 99, 132, 0.6)\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function MainChart() {\r\n  return (\r\n    <div className=\"has-background-light\">\r\n      <div className=\"container main-chart\" id=\"main-chart\">\r\n        <div className=\"columns level\">\r\n          <div className=\"column\">\r\n            <Bar\r\n              data={data}\r\n              options={{\r\n                mantainAspectRatio: true,\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      ticks: {\r\n                        callback: function(value, index, values) {\r\n                          if (parseInt(value) >= 1000) {\r\n                            return (\r\n                              \"$\" +\r\n                              value\r\n                                .toString()\r\n                                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                            );\r\n                          } else {\r\n                            return \"$\" + value;\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  ]\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <h1 className=\"is-size-2 is-size-4-mobile service-section-description\">\r\n              Great Visualizations\r\n            </h1>\r\n            <p className=\"is-size-5 service-section-description\">\r\n              Explore and analyze your information with interactive charts that\r\n              are capable of showing different data sets and a variety of charts\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Statistic, Card, Row, Col, Icon } from \"antd\";\r\n\r\nexport default function KPI() {\r\n  return (\r\n    <div className=\"container kpi-section\" id=\"kpi-section\">\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-half\">\r\n          <h1 className=\"is-size-2 is-size-4-mobile service-section-description\">\r\n            Benchmark yourself against the sector\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-three-quarters\">\r\n          <p className=\"is-size-5 service-section-description\">\r\n            The only way to find out how good your business is doing out there\r\n            is by measuring yourself against others in the same industry. We\r\n            provide you with valuable insight that will let you know how great\r\n            you're doing.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-half\">\r\n          <div style={{ background: \"#ECECEC\", padding: \"30px\" }}>\r\n            <p>You vs Yourself</p>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"Revuenue per Month\"\r\n                    value={5.01}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#3f8600\" }}\r\n                    prefix={<Icon type=\"arrow-up\" />}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card>\r\n                  <Statistic\r\n                    title=\"ROI\"\r\n                    value={2.7}\r\n                    precision={2}\r\n                    valueStyle={{ color: \"#cf1322\" }}\r\n                    prefix={<Icon type=\"arrow-down\" />}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div\r\n      className=\"has-background-black has-text-white footer-section\"\r\n      id=\"footer-section\"\r\n    >\r\n      <div className=\"container footer-container\">\r\n        <h1 className=\"has-text-white is-size-2 is-size-4-mobile\">\r\n          Sign up and know your reasons\r\n        </h1>\r\n        <div className=\"columns is-centered\">\r\n          <div className=\"column is-half\">\r\n            <p className=\"is-size-5 service-section-description\">\r\n              All the information you submit is <u>confidential</u> and can only\r\n              be seen by you. Know your reasons only use it to calculate the\r\n              different global sector KPI's and ratios in an anonymous way.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"logo-footer\">\r\n          <span className=\"is-size-2\">\r\n            KYR{\" \"}\r\n            <span className=\"icon is-large theicon\">\r\n              <i className=\"fas fa-chart-line \" />\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <a\r\n          href=\"/signup\"\r\n          className=\"button is-rounded is-light is-medium is-size-4\"\r\n        >\r\n          <span>Sign up now!</span>{\" \"}\r\n          <span className=\"icon is-small theicon\">\r\n            <i className=\"fas fa-user-plus\" />\r\n          </span>\r\n        </a>\r\n      </div>\r\n      <div className=\"columns is-centered low-bar has-background-grey-light has-text-black\">\r\n        <div className=\"column is-half\">\r\n          <span>\r\n            Made by <a href=\"https://github.com/jduarte00\">Jose Duarte</a> using{\" \"}\r\n            <a href=\"https://bulma.io/\">Bulma</a>,{\" \"}\r\n            <a href=\"https://ant.design/\">Ant Design</a> and{\" \"}\r\n            <a href=\"https://reactjs.org/\">React</a>{\" \"}\r\n          </span>\r\n          <span className=\"icon is-small\">\r\n            <i className=\"fas fa-laptop\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Hero from \"./Hero\";\nimport Services from \"./Services\";\nimport MainChart from \"./MainChart\";\nimport KPI from \"./KPI\";\nimport Footer from \"./Footer\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Hero />\n      <Services />\n      <MainChart />\n      <KPI />\n      <Footer />\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"https://find-your-reasons-back.herokuapp.com/auth\",\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n\n  loggedin = () => {\n    return this.service.get(\"/loggedin\").then(response => response.data);\n  };\n\n  login = (username, password) => {\n    return this.service\n      .post(\"/login\", { username, password })\n      .then(response => response.data);\n  };\n\n  logout = () => {\n    return this.service.post(\"/logout\", {}).then(response => response.data);\n  };\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"./auth-service\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      redirect: false,\r\n      errorLoginIn: false\r\n    };\r\n    this.service = new AuthService();\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  makeHamburger = () => {\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n      // Get all \"navbar-burger\" elements\r\n      const $navbarBurgers = Array.prototype.slice.call(\r\n        document.querySelectorAll(\".navbar-burger\"),\r\n        0\r\n      );\r\n\r\n      // Check if there are any navbar burgers\r\n      if ($navbarBurgers.length > 0) {\r\n        // Add a click event on each of them\r\n        $navbarBurgers.forEach(el => {\r\n          el.addEventListener(\"click\", () => {\r\n            // Get the target from the \"data-target\" attribute\r\n            const target = el.dataset.target;\r\n            const $target = document.getElementById(target);\r\n\r\n            // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\r\n            el.classList.toggle(\"is-active\");\r\n            $target.classList.toggle(\"is-active\");\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {});\r\n    const username = this.state.username;\r\n    const password = this.state.password;\r\n    this.service\r\n      .login(username, password)\r\n      .then(response => {\r\n        this.setState({ username: \"\", password: \"\", redirect: true });\r\n        this.props.getUser(response);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ errorLoginIn: true });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        {this.state.redirect ? <Redirect to=\"/home\" /> : null}\r\n        <nav className=\"navbar is-info\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n              <a className=\"navbar-item\" href=\"/\">\r\n                <span className=\"is-size-2\">\r\n                  KYR{\" \"}\r\n                  <span className=\"icon is-large theicon\">\r\n                    <i className=\"fas fa-chart-line \" />\r\n                  </span>\r\n                </span>\r\n              </a>\r\n              <span\r\n                className=\"navbar-burger burger\"\r\n                data-target=\"navbarMenuHeroA\"\r\n              >\r\n                <span />\r\n                <span />\r\n                <span />\r\n              </span>\r\n            </div>\r\n            <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\r\n              <div className=\"navbar-end\">\r\n                <a className=\"navbar-item\" href=\"/\">\r\n                  Home\r\n                </a>\r\n                <a className=\"navbar-item is-active\" href=\"/signin\">\r\n                  Sign In\r\n                </a>\r\n                <a className=\"navbar-item\" href=\"/signup\">\r\n                  Sign Up\r\n                </a>\r\n                <span className=\"navbar-item\">\r\n                  <a\r\n                    className=\"button is-primary is-inverted\"\r\n                    href=\"https://github.com/jduarte00\"\r\n                  >\r\n                    <span className=\"icon\">\r\n                      <i className=\"fab fa-github\" />\r\n                    </span>\r\n                    <span>My Code :)</span>\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container form-container\">\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-one-third\">\r\n              <h1 className=\"is-size-3\">Hey, Welcome Back! Sign in!</h1>\r\n              <div className=\"icon-form\">\r\n                <span className=\"icon is-large\">\r\n                  <i className=\"fas fa-id-card fa-3x\" />\r\n                </span>\r\n              </div>\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"userName\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please input your username!\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type=\"user\"\r\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                        />\r\n                      }\r\n                      placeholder=\"Username\"\r\n                      name=\"username\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"password\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please input your Password!\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type=\"lock\"\r\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                        />\r\n                      }\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <div>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"login-form-button\"\r\n                    >\r\n                      Log in\r\n                    </Button>\r\n                    Or <a href=\"/signup\">register now!</a>\r\n                  </div>\r\n                </Form.Item>\r\n              </Form>\r\n              {this.state.errorLoginIn ? (\r\n                <div className=\"notification is-danger\">\r\n                  Wrong username and password, please check them and try again!\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {this.makeHamburger()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(Login);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button } from \"antd\";\nimport AuthService from \"./auth-service\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirect: false\n    };\n    this.service = new AuthService();\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  makeHamburger = () => {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      // Get all \"navbar-burger\" elements\n      const $navbarBurgers = Array.prototype.slice.call(\n        document.querySelectorAll(\".navbar-burger\"),\n        0\n      );\n\n      // Check if there are any navbar burgers\n      if ($navbarBurgers.length > 0) {\n        // Add a click event on each of them\n        $navbarBurgers.forEach(el => {\n          el.addEventListener(\"click\", () => {\n            // Get the target from the \"data-target\" attribute\n            const target = el.dataset.target;\n            const $target = document.getElementById(target);\n\n            // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n            el.classList.toggle(\"is-active\");\n            $target.classList.toggle(\"is-active\");\n          });\n        });\n      }\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\", redirect: true });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        {this.state.redirect ? <Redirect to=\"/home\" /> : null}\n\n        <nav className=\"navbar is-info\">\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n              <a className=\"navbar-item\" href=\"/\">\n                <span className=\"is-size-2\">\n                  KYR{\" \"}\n                  <span className=\"icon is-large theicon\">\n                    <i className=\"fas fa-chart-line \" />\n                  </span>\n                </span>\n              </a>\n              <span\n                className=\"navbar-burger burger\"\n                data-target=\"navbarMenuHeroA\"\n              >\n                <span />\n                <span />\n                <span />\n              </span>\n            </div>\n            <div id=\"navbarMenuHeroA\" className=\"navbar-menu\">\n              <div className=\"navbar-end\">\n                <a className=\"navbar-item\" href=\"/\">\n                  Home\n                </a>\n                <a className=\"navbar-item\" href=\"/signin\">\n                  Sign In\n                </a>\n                <a className=\"navbar-item is-active\" href=\"/signup\">\n                  Sign Up\n                </a>\n                <span className=\"navbar-item\">\n                  <a\n                    className=\"button is-primary is-inverted\"\n                    href=\"https://github.com/jduarte00\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"fab fa-github\" />\n                    </span>\n                    <span>My Code :)</span>\n                  </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"container form-container\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-one-third\">\n              <h1 className=\"is-size-3\">\n                We're glad you decided to join! Sign up!\n              </h1>\n              <div className=\"icon-form\">\n                <span className=\"icon is-large\">\n                  <i class=\"fas fa-smile-wink fa-3x\" />\n                </span>\n              </div>\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                  {getFieldDecorator(\"userName\", {\n                    rules: [\n                      { required: true, message: \"Please input your username!\" }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"user\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      placeholder=\"Username\"\n                      name=\"username\"\n                      onChange={this.handleChange}\n                    />\n                  )}\n                </Form.Item>\n                <Form.Item>\n                  {getFieldDecorator(\"password\", {\n                    rules: [\n                      { required: true, message: \"Please input your Password!\" }\n                    ]\n                  })(\n                    <Input\n                      prefix={\n                        <Icon\n                          type=\"lock\"\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\n                        />\n                      }\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={this.handleChange}\n                    />\n                  )}\n                </Form.Item>\n\n                <Form.Item>\n                  <div>\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      className=\"login-form-button\"\n                    >\n                      Sign Up\n                    </Button>\n                    Or <a href=\"/signin\">sign in</a> if you already have an\n                    account\n                  </div>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n        </div>\n\n        {this.makeHamburger()}\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalSignupForm = Form.create({ name: \"normal_login\" })(Signup);\n\nexport default WrappedNormalSignupForm;\n","import React from \"react\";\nimport { Breadcrumb } from \"antd\";\n\nexport default function MyBreadcrumb(props) {\n  let allBreads = props.routes.map((item, current) => {\n    return <Breadcrumb.Item key={current}>{item}</Breadcrumb.Item>;\n  });\n\n  return (\n    <Breadcrumb style={{ margin: \"16px 20px\", textAlign: \"left\" }}>\n      {allBreads}\n    </Breadcrumb>\n  );\n}\n","import React, { Component } from \"react\";\nimport MyBreadcrumb from \"../Breadcrumb\";\nimport { Table, Card, Icon, Divider, Typography } from \"antd\";\n\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst { Title, Paragraph, Text } = Typography;\nexport default class MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userApps: null,\n      user: props.theUser,\n      key: \"income\"\n    };\n\n    this.columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\"\n      },\n      {\n        title: \"Actions\",\n        dataIndex: \"view\",\n        align: \"right\",\n        key: \"view\",\n        render: theId => {\n          return (\n            <div className=\"field has-addons\" id=\"center-buttons-table\">\n              <p className=\"control\" id=\"remove-margin-buttons\">\n                <a\n                  className=\"button is-success is-small\"\n                  onClick={() => {\n                    this.props.changeRoute(\"viewapp\", theId);\n                  }}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-align-left\" />\n                  </span>\n                  <span>View</span>\n                </a>\n              </p>\n              <p className=\"control\" id=\"remove-margin-buttons\">\n                <span\n                  className=\"button is-info is-small\"\n                  onClick={(e, theId) => {\n                    this.props.changeRoute(\"viewapp\", theId);\n                  }}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-align-center\" />\n                  </span>\n                  <span>Edit</span>\n                </span>\n              </p>\n              <p className=\"control\" id=\"remove-margin-buttons\">\n                <span\n                  className=\"button is-danger is-small\"\n                  onClick={(e, Id = theId) => {\n                    this.deleteApp(Id);\n                  }}\n                >\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-align-right\" />\n                  </span>\n                  <span>Delete</span>\n                </span>\n              </p>\n            </div>\n          );\n        }\n      }\n    ];\n\n    this.tabList = [\n      {\n        key: \"income\",\n        tab: \"Income Diff\"\n      },\n      {\n        key: \"expenses\",\n        tab: \"Expenses Diff\"\n      },\n      {\n        key: \"users\",\n        tab: \"Users Diff\"\n      }\n    ];\n  }\n\n  makeKpiInfo = theData => {\n    const valueIndicators = {\n      incomeDifference:\n        theData.data.incomeDifference >= 0\n          ? \"+\" + \"$\" + theData.data.incomeDifference\n          : \"-\" + \"$\" + Math.abs(theData.data.incomeDifference),\n      expensesDifference:\n        theData.data.expensesDifference >= 0\n          ? \"+\" + \"$\" + theData.data.expensesDifference\n          : \"-\" + \"$\" + Math.abs(theData.data.expensesDifference),\n      usersDifference:\n        theData.data.usersDifference >= 0\n          ? \"+\" + theData.data.usersDifference\n          : \"-\" + Math.abs(theData.data.usersDifference)\n    };\n\n    this.contentList = {\n      income: <p className=\"title\"> {valueIndicators.incomeDifference}</p>,\n      expenses: <p className=\"title\"> {valueIndicators.expensesDifference}</p>,\n      users: <p className=\"title\">{valueIndicators.usersDifference}</p>\n    };\n  };\n\n  makeMainChartData = theData => {\n    this.dataMainChart = {\n      labels: [\"Incomes\", \"Expenses\", \"Users\"],\n      datasets: theData.data.mainGraphArray\n    };\n  };\n\n  makeExpensesChartData = theData => {\n    this.dataExpensesChart = {\n      labels: theData.data.expensesGraphArray.labels,\n      datasets: [\n        {\n          data: theData.data.expensesGraphArray.dataSeries,\n          backgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\",\n            \"#FF6384\",\n            \"#36A2EB\"\n          ],\n          hoverBackgroundColor: [\n            \"#FF6384\",\n            \"#36A2EB\",\n            \"#FFCE56\",\n            \"#FF6384\",\n            \"#36A2EB\"\n          ]\n        }\n      ]\n    };\n  };\n\n  getRegisteredCompanies = () => {\n    axios\n      .get(\"https://find-your-reasons-back.herokuapp.com/user/panel\", {\n        withCredentials: true\n      })\n      .then(theData => {\n        if (!(theData.data.noData || theData.data.noMonths)) {\n          this.makeKpiInfo(theData);\n          this.makeMainChartData(theData);\n          this.makeExpensesChartData(theData);\n        }\n\n        this.setState({ userApps: theData.data });\n      });\n  };\n\n  onTabChange = (key, type) => {\n    this.setState({ [type]: key });\n  };\n\n  componentDidMount = () => {\n    this.getRegisteredCompanies();\n  };\n\n  deleteApp = appid => {\n    axios\n      .delete(\n        `https://find-your-reasons-back.herokuapp.com/app/deleteapp/${appid}`,\n        {\n          withCredentials: true\n        }\n      )\n      .then(theIndex => {\n        this.getRegisteredCompanies();\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container responsive-padding-sides\">\n          {this.state.userApps ? (\n            <>\n              <MyBreadcrumb routes={[this.state.user.username, \"home\"]} />\n\n              {this.state.userApps.noData ? (\n                <div style={{ marginTop: \"150px\" }}>\n                  <Title level={3}>\n                    {\" \"}\n                    You have not registered any app yet, please do so!\n                  </Title>\n                  <Icon\n                    type=\"eye-invisible\"\n                    style={{ fontSize: \"100px\", marginTop: \"50px\" }}\n                  />\n                </div>\n              ) : (\n                <>\n                  <Divider>Welcome Back</Divider>\n                  <div\n                    className=\"columns is-centered\"\n                    style={{ marginTop: \"50px\" }}\n                  >\n                    <div className=\"column is-half\">\n                      <Title level={2}>\n                        {\" \"}\n                        This are your monthly kpi's and numbers\n                      </Title>\n                      <Icon\n                        type=\"arrow-down\"\n                        style={{ fontSize: \"50px\", marginTop: \"15px\" }}\n                      />\n                    </div>\n                  </div>\n                  <Divider orientation=\"left\" style={{ marginTop: \"100px\" }}>\n                    Your registered apps\n                  </Divider>\n                  <div className=\"columns margin-top\">\n                    <div className=\"column\">\n                      <Table\n                        columns={this.columns}\n                        dataSource={this.state.userApps.tableData}\n                        size=\"middle\"\n                        style={{ marginTop: \"20px\" }}\n                      />\n                    </div>\n                  </div>\n                  {this.state.userApps.noMonths ? (\n                    <div>\n                      <h1 style={{ marginTop: \"200px\" }}>\n                        Add apps with months (SasS income generation type) and\n                        add months to be able to see this information!\n                      </h1>\n                    </div>\n                  ) : (\n                    <>\n                      <Divider\n                        orientation=\"left\"\n                        style={{ marginTop: \"150px\" }}\n                      >\n                        Your monthly numbers\n                      </Divider>\n                      <div className=\"columns margin-top\">\n                        <div className=\"column\">\n                          <p className=\"heading\">Total Income</p>\n                          <p className=\"title\">\n                            {this.state.userApps.allIncomes}\n                          </p>\n                        </div>\n                        <div className=\"column\">\n                          <p className=\"heading\">Total Expenses</p>\n                          <p className=\"title\">\n                            {this.state.userApps.allExpenses}\n                          </p>\n                        </div>\n                        <div className=\"column\">\n                          <p className=\"heading\">Total Users</p>\n                          <p className=\"title\">\n                            {this.state.userApps.allUsers}\n                          </p>\n                        </div>\n                      </div>\n                      <Divider style={{ marginTop: \"150px\" }}>\n                        Your apps performance\n                      </Divider>\n                      <div className=\"columns margin-top\">\n                        <div className=\"column\">\n                          <Bar\n                            data={this.dataMainChart}\n                            options={{\n                              mantainAspectRatio: false,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      callback: function(value, index, values) {\n                                        if (parseInt(value) >= 1000) {\n                                          return (\n                                            \"$\" +\n                                            value\n                                              .toString()\n                                              .replace(\n                                                /\\B(?=(\\d{3})+(?!\\d))/g,\n                                                \",\"\n                                              )\n                                          );\n                                        } else {\n                                          return \"$\" + value;\n                                        }\n                                      },\n                                      beginAtZero: true\n                                    }\n                                  }\n                                ]\n                              }\n                            }}\n                          />\n                        </div>\n                      </div>\n                      <Divider\n                        orientation=\"left\"\n                        style={{ marginTop: \"150px\" }}\n                      >\n                        {\" \"}\n                        KPI's and Expenses of the Month\n                      </Divider>\n                      <div className=\"columns margin-top\">\n                        <div className=\"column is-half\">\n                          {this.state.userApps.incomeDifference ? (\n                            <Card\n                              style={{ height: \"100%\" }}\n                              title=\"Main Metrics\"\n                              tabList={this.tabList}\n                              activeTabKey={this.state.key}\n                              onTabChange={key => {\n                                this.onTabChange(key, \"key\");\n                              }}\n                            >\n                              {this.contentList[this.state.key]}\n                            </Card>\n                          ) : (\n                            <div>\n                              <h1>\n                                You need to provide info about the past month to\n                                be able to see this information\n                              </h1>\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"column is-half margin-top-responsive\">\n                          <Pie\n                            data={this.dataExpensesChart}\n                            options={{\n                              mantainAspectRatio: false,\n                              scales: {\n                                yAxes: [\n                                  {\n                                    ticks: {\n                                      callback: function(value, index, values) {\n                                        if (parseInt(value) >= 1000) {\n                                          return (\n                                            \"$\" +\n                                            value\n                                              .toString()\n                                              .replace(\n                                                /\\B(?=(\\d{3})+(?!\\d))/g,\n                                                \",\"\n                                              )\n                                          );\n                                        } else {\n                                          return \"$\" + value;\n                                        }\n                                      }\n                                    }\n                                  }\n                                ]\n                              }\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </>\n                  )}\n                </>\n              )}\n            </>\n          ) : (\n            <div>\n              <Icon type=\"loading\" style={{ marginTop: \"300px\" }} />\n              <h1>Loading...</h1>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Icon,\r\n  Select,\r\n  Button,\r\n  Radio,\r\n  InputNumber\r\n} from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nlet idDynamicForm = 0;\r\n\r\nclass TheFormClass extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    typeOfApp: null,\r\n    confirmation: null,\r\n    idDynamic: 0\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const infoToSend = this.props.form.getFieldsValue();\r\n        axios\r\n          .post(\r\n            \"https://find-your-reasons-back.herokuapp.com/app/createapp\",\r\n            { infoToSend },\r\n            { withCredentials: true }\r\n          )\r\n          .then(response => {\r\n            this.props.statusNewApp(\"good\");\r\n            this.props.form.resetFields();\r\n            this.setState({ idDynamic: 0 });\r\n\r\n            return response;\r\n          })\r\n          .catch(err => {\r\n            this.props.statusNewApp(\"bad\");\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  //Method to delete an item from the dynamic form\r\n\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n\r\n    // can use data-binding to set\r\n    //I think i might be able to delete this part because i'm not using data binding\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n  };\r\n\r\n  //Method to add an item to the dynamic form\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(this.state.idDynamic++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      keys: nextKeys\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let idDynamicForm = 0;\r\n\r\n    let id = 0;\r\n\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n\r\n    const toggleAppGenerationType = this.props.form.getFieldValue(\r\n      \"incomeGeneration\"\r\n    );\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 10,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 }\r\n      }\r\n    };\r\n\r\n    const formItemLayoutDynamic = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 }\r\n      }\r\n    };\r\n\r\n    //Code for generating dynamic input layout\r\n\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <Form.Item\r\n        {...(index === 0 ? formItemLayoutDynamic : formItemLayoutWithOutLabel)}\r\n        label={index === 0 ? \"User type\" : \"\"}\r\n        required={false}\r\n        key={k}\r\n      >\r\n        {getFieldDecorator(`userTypes[${k}]`, {\r\n          validateTrigger: [\"onChange\", \"onBlur\"],\r\n          rules: [\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input user type or delete this field.\"\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            placeholder=\"user type name\"\r\n            style={{ width: \"60%\", marginRight: 8 }}\r\n          />\r\n        )}\r\n        {keys.length > 1 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            disabled={keys.length === 1}\r\n            onClick={() => this.remove(k)}\r\n          />\r\n        ) : null}\r\n      </Form.Item>\r\n    ));\r\n\r\n    console.log(getFieldValue(\"keys\"));\r\n\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Name\" hasFeedback>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input the name of your App\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Category\" hasFeedback>\r\n          {getFieldDecorator(\"category\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select the category of your app\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"Please select a category\">\r\n              <Option value=\"productivity\">Productivity</Option>\r\n              <Option value=\"finance\">Finance</Option>\r\n              <Option value=\"game\">Games</Option>\r\n              <Option value=\"utility\">Utilities</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Size of the App&nbsp;\r\n              <Tooltip title=\"Small for apps with 5,000 users or less, Medium for apps with 10,000 users or less and Big for apps over 10k\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator(\"size\", {\r\n            rules: [{ required: true, message: \"Please select a size\" }]\r\n          })(\r\n            <Radio.Group>\r\n              <Radio.Button value=\"small\">Small</Radio.Button>\r\n              <Radio.Button value=\"medium\">Medium</Radio.Button>\r\n              <Radio.Button value=\"big\">Big</Radio.Button>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Income Generation\" hasFeedback>\r\n          {getFieldDecorator(\"incomeGeneration\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select the type of income of your app\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"How do you plan to make money?\">\r\n              <Option value=\"sell\">Selling my app</Option>\r\n              <Option value=\"saas\">SaaS</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Select platforms\" hasFeedback>\r\n          {getFieldDecorator(\"supportedPlatforms\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select all the platforms\",\r\n                type: \"array\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select\r\n              mode=\"multiple\"\r\n              placeholder=\"Please select the supported platforms\"\r\n            >\r\n              <Option value=\"windows\">Windows</Option>\r\n              <Option value=\"osx\">OSX</Option>\r\n              <Option value=\"ios\">iOS</Option>\r\n              <Option value=\"android\">Android</Option>\r\n              <Option value=\"web\">Web App</Option>\r\n              <Option value=\"other\">Other</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n\r\n        {toggleAppGenerationType ? (\r\n          toggleAppGenerationType === \"sell\" ? (\r\n            <>\r\n              <Form.Item label=\"Selling Price\" hasFeedback>\r\n                {getFieldDecorator(\"sellingPrice\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the selling price of your App\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Cost of Development\" hasFeedback>\r\n                {getFieldDecorator(\"totalCostOfDevelopment\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the total cost of development\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {formItems}\r\n\r\n              <Form.Item {...formItemLayoutWithOutLabel}>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={this.add}\r\n                  style={{ width: \"60%\" }}\r\n                >\r\n                  <Icon type=\"plus\" /> Add new user type\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )\r\n        ) : null}\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Create new App!\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst TheForm = Form.create({ name: \"register\" })(TheFormClass);\r\n\r\nexport default TheForm;\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n    <Alert\r\n      message={props.message}\r\n      showIcon={true}\r\n      banner\r\n      type={props.typeOfMessage}\r\n      closable\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport MyBreadcrumb from \"../Breadcrumb\";\nimport TheForm from \"./TheForm\";\nimport Message from \"./Message\";\n\nexport default class MainForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.theUser,\n      confirmation: null,\n      statusNewApp: null\n    };\n  }\n\n  displayConfirmation = success => {\n    this.setState({ confirmation: success });\n  };\n\n  changeStatusNewApp = status => {\n    this.setState({ statusNewApp: status });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.statusNewApp === \"good\" ? (\n          <Message\n            changeRoute={this.props.changeRoute}\n            message={<span>The new app has been added to your account.</span>}\n            typeOfMessage=\"success\"\n          />\n        ) : null}\n\n        {this.state.statusNewApp === \"bad\" ? (\n          <Message\n            changeRoute={this.props.changeRoute}\n            message={<span>Oops! Something went wrong :(</span>}\n            typeOfMessage=\"danger\"\n          />\n        ) : null}\n        <div className=\"container responsive-padding-sides\">\n          <MyBreadcrumb routes={[this.state.user.username, \"New App\"]} />\n          <div className=\"columns is-centered\">\n            <div className=\"column is-three-quarters\">\n              <TheForm\n                confirmation={this.displayConfirmation}\n                statusNewApp={this.changeStatusNewApp}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport MyBreadcrumb from \"../Breadcrumb\";\n\nexport default class UserProfileForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.theUser.username,\n      password: \"\",\n      newPassword: \"\",\n      errorChanging: false\n    };\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    console.log(this.state);\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"container responsive-padding-sides\">\n          <MyBreadcrumb routes={[this.state.user, \"profile\"]} />\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <span className=\"icon is-large\">\n                <i className=\"fas fa-user-edit fa-3x\" />\n              </span>\n            </div>\n          </div>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <span className=\"button is-info\">Username</span>\n                </div>\n                <div className=\"control is-expanded\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"user\"\n                    placeholder={this.state.user}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <span className=\"button is-info\">Old Password</span>\n                </div>\n                <div className=\"control is-expanded\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"password\"\n                    placeholder=\"Type old password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <span className=\"button is-info\">New Password</span>\n                </div>\n                <div className=\"control is-expanded\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    name=\"newPassword\"\n                    placeholder=\"Type new password\"\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.errorChanging ? (\n            <div className=\"columns is-centered\">\n              <div className=\"column is-half\">\n                <div class=\"notification is-danger\">\n                  Your old password is not right, please check it and introduce\n                  it again.\n                </div>\n              </div>\n            </div>\n          ) : null}\n          <div className=\"columns is-centered\">\n            <div className=\"column is-half\">\n              <a\n                className=\"button is-success is-fullwidth is-rounded\"\n                href=\"/not-finished\"\n              >\n                Commit Changes!\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport MyBreadcrumb from \"../Breadcrumb\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { Typography, Table, Divider, Card, Icon, Button } from \"antd\";\r\nconst { Title, Text } = Typography;\r\n\r\nexport default class ViewApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: props.theUser,\r\n      appData: null,\r\n      appID: props.appID,\r\n      appName: \"\",\r\n      key: \"income\"\r\n    };\r\n    /* Create the column array for the display of the table */\r\n\r\n    this.columns = [\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"dataLabel\",\r\n        key: \"dataLabel\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Sales\",\r\n        dataIndex: \"sales\",\r\n        key: \"sales\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Expenses\",\r\n        dataIndex: \"expenses\",\r\n        key: \"expenses\",\r\n        align: \"center\"\r\n      },\r\n      {\r\n        title: \"Users\",\r\n        dataIndex: \"users\",\r\n        key: \"users\",\r\n        align: \"center\"\r\n      }\r\n    ];\r\n\r\n    this.tabList = [\r\n      {\r\n        key: \"income\",\r\n        tab: \"Income vs Last Month\"\r\n      },\r\n      {\r\n        key: \"expenses\",\r\n        tab: \"Expenses vs Last Month\"\r\n      },\r\n      {\r\n        key: \"users\",\r\n        tab: \"Users vs Last Month\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  createGraphsArrays = appData => {\r\n    const mainChartData = {\r\n      labels: appData.data.dataLabels,\r\n      datasets: [\r\n        {\r\n          label: \"Income\",\r\n          backgroundColor: \"rgba(255,99,132)\",\r\n          borderColor: \"rgba(255,99,132,1)\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n          hoverBorderColor: \"rgba(255,99,132,1)\",\r\n          data: appData.data.incomeDataSeries\r\n        },\r\n        {\r\n          label: \"Expenses\",\r\n          backgroundColor: \"rgba(255,0,0)\",\r\n          borderColor: \"rgba(255,99,132,1)\",\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: \"rgba(255,0,0,0.4)\",\r\n          hoverBorderColor: \"rgba(255,99,132,1)\",\r\n          data: appData.data.expensesDataSeries\r\n        }\r\n      ]\r\n    };\r\n\r\n    const userGraphData = {\r\n      labels: appData.data.dataLabels,\r\n      datasets: [\r\n        {\r\n          label: \"Average Users per Month\",\r\n          fill: true,\r\n          lineTension: 0.1,\r\n          backgroundColor: \"rgba(75,192,192,0.4)\",\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: \"rgba(75,192,192,1)\",\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: appData.data.usersDataSeries\r\n        }\r\n      ]\r\n    };\r\n\r\n    let forecastData = {};\r\n    if (appData.data.forecast) {\r\n      forecastData = {\r\n        labels: appData.data.forecast.labels,\r\n        datasets: [\r\n          {\r\n            label: \"Average Users per Month\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: \"rgba(75,192,192,0.4)\",\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgba(75,192,192,1)\",\r\n            pointBackgroundColor: \"#fff\",\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n            pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: appData.data.forecast.forecastSeries\r\n          }\r\n        ]\r\n      };\r\n    }\r\n\r\n    this.userGraphData = userGraphData;\r\n    this.mainGraphData = mainChartData;\r\n    this.forecastGraphData = forecastData;\r\n  };\r\n\r\n  createKpiCard = appData => {\r\n    const content = {\r\n      income: <p className=\"title\"> {appData.data.incomeDifference}</p>,\r\n      expenses: <p className=\"title\"> {appData.data.expensesDifference}</p>,\r\n      users: <p className=\"title\"> {appData.data.userDifference}</p>\r\n    };\r\n\r\n    this.contentList = content;\r\n  };\r\n\r\n  getTheAppData = appID => {\r\n    axios\r\n      .get(\r\n        `https://find-your-reasons-back.herokuapp.com/app/viewapp/${appID}`,\r\n        {\r\n          withCredentials: true\r\n        }\r\n      )\r\n      .then(appData => {\r\n        this.createGraphsArrays(appData);\r\n        this.createKpiCard(appData);\r\n        this.setState({\r\n          appData: appData.data,\r\n          appName: appData.data.theApp.name\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.getTheAppData(this.state.appID);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container responsive-padding-sides\">\r\n          <MyBreadcrumb\r\n            routes={[this.state.user.username, this.state.appName]}\r\n          />\r\n\r\n          {this.state.appData ? (\r\n            <>\r\n              <div className=\"columns margin-top\">\r\n                <div className=\"column\">\r\n                  <Title> {this.state.appName} </Title>\r\n                </div>\r\n              </div>\r\n              {this.state.appData.theApp.months.length > 0 ? (\r\n                <>\r\n                  {/* Intro to the page */}\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <Title level={3}>\r\n                        {\" \"}\r\n                        {`We have  ${\r\n                          this.state.appData.tableDisplayArray.length\r\n                        } months registered for this app in our database.`}{\" \"}\r\n                      </Title>\r\n                      <Text>\r\n                        {\" \"}\r\n                        Add more months to get more precise information.{\" \"}\r\n                      </Text>{\" \"}\r\n                    </div>\r\n                  </div>\r\n                  {/* Display the latest incomes, expenses and users of the app */}\r\n\r\n                  <div className=\"margin-top\">\r\n                    <Divider\r\n                      className=\"margin-top\"\r\n                      style={{ color: \"dark-grey\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Latest Month Numbers\r\n                    </Divider>\r\n                  </div>\r\n\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <div className=\"columns\">\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Income</p>\r\n                          <p className=\"title\">\r\n                            {\r\n                              this.state.appData.incomeDataSeries[\r\n                                this.state.appData.incomeDataSeries.length - 1\r\n                              ]\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Expenses</p>\r\n                          <p className=\"title\">\r\n                            {\" \"}\r\n                            {\r\n                              this.state.appData.expensesDataSeries[\r\n                                this.state.appData.expensesDataSeries.length - 1\r\n                              ]\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Users</p>\r\n                          <p className=\"title\">\r\n                            {\r\n                              this.state.appData.usersDataSeries[\r\n                                this.state.appData.usersDataSeries.length - 1\r\n                              ]\r\n                            }\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/* Display of the table if there is at least one element on the app */}\r\n\r\n                  {this.state.appData.tableDisplayArray.length ? (\r\n                    <div className=\"columns margin-top\">\r\n                      <div className=\"column\">\r\n                        <Table\r\n                          columns={this.columns}\r\n                          dataSource={this.state.appData.tableDisplayArray}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <Text>There was a problem displaying this table</Text>\r\n                  )}\r\n\r\n                  {/* Conditional to check if there is enough data to present graphs */}\r\n\r\n                  {this.state.appData.incomeDataSeries.length === 0 ? (\r\n                    <h1>\r\n                      Sorry, there is not enough data to display this\r\n                      information, add more months and try again!\r\n                    </h1>\r\n                  ) : (\r\n                    /* Data that will be display if there is enough information */\r\n                    <>\r\n                      {/* Main chart with the income and expenses */}\r\n                      <div className=\"columns margin-top is-centered\">\r\n                        <div className=\"column is-half\">\r\n                          <Title level={2}> Incomes and Expenses </Title>\r\n                          <Bar\r\n                            data={this.mainGraphData}\r\n                            options={{\r\n                              mantainAspectRatio: true,\r\n                              scales: {\r\n                                yAxes: [\r\n                                  {\r\n                                    ticks: {\r\n                                      beginAtZero: true\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        {/* Chart with the number of users */}\r\n                        <div className=\"column is-half margin-top-responsive\">\r\n                          <Title level={2}> Average Users </Title>\r\n                          <Line\r\n                            data={this.userGraphData}\r\n                            options={{\r\n                              mantainAspectRatio: false,\r\n                              responsive: true,\r\n                              scales: {\r\n                                yAxes: [\r\n                                  {\r\n                                    ticks: {\r\n                                      beginAtZero: true\r\n                                    }\r\n                                  }\r\n                                ]\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n\r\n                  {/* Conditional to present the KPI card's */}\r\n\r\n                  {this.state.appData.kpiError ? (\r\n                    <Title level={2}>\r\n                      Sorry, you need at to provide at least 2 months of data in\r\n                      order for us to give you kpi values{\" \"}\r\n                    </Title>\r\n                  ) : (\r\n                    <div className=\"columns margin-top is-centered\">\r\n                      {/* KPI against self */}\r\n                      <div className=\"column\">\r\n                        <Title level={2}> You vs yourself </Title>\r\n                        <Card\r\n                          title=\"Your App Metrics\"\r\n                          tabList={this.tabList}\r\n                          activeTabKey={this.state.key}\r\n                          onTabChange={key => {\r\n                            this.onTabChange(key, \"key\");\r\n                          }}\r\n                        >\r\n                          {this.contentList[this.state.key]}\r\n                        </Card>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {/* Forecasted graphic */}\r\n                  {this.state.appData.incomeDataSeries.length < 8 ? (\r\n                    <div className=\"columns margin-top is-centered\">\r\n                      <div className=\"column is-three-quarters\">\r\n                        <Title level={2}>\r\n                          Sorry, you need at to provide at least 8 months of\r\n                          data in order for us to give you good forecasted\r\n                          values{\" \"}\r\n                        </Title>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"columns margin-top is-centered\">\r\n                      <div className=\"column is-three-quarters\">\r\n                        <Title level={2}>\r\n                          {\" \"}\r\n                          Your forecasted sales for the next months!{\" \"}\r\n                        </Title>\r\n                        <Line\r\n                          data={this.forecastGraphData}\r\n                          options={{\r\n                            mantainAspectRatio: false,\r\n                            responsive: true,\r\n                            scales: {\r\n                              yAxes: [\r\n                                {\r\n                                  ticks: {\r\n                                    beginAtZero: true\r\n                                  }\r\n                                }\r\n                              ]\r\n                            }\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        icon=\"home\"\r\n                        onClick={() => {\r\n                          this.props.changeRoute(\"home\");\r\n                        }}\r\n                      >\r\n                        Go Home!\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : this.state.appData.theApp.incomeGeneration !== \"saas\" ? (\r\n                <>\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <Title level={3}>\r\n                        {`You sold this app on ${\r\n                          this.state.appData.dayOfCreation\r\n                        } ${this.state.appData.monthOfCreation} ${\r\n                          this.state.appData.yearOfCreation\r\n                        }`}\r\n                      </Title>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"margin-top\">\r\n                    <Divider\r\n                      className=\"margin-top\"\r\n                      style={{ color: \"dark-grey\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Your Sale\r\n                    </Divider>\r\n                  </div>\r\n\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <div className=\"columns\">\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Sold Price</p>\r\n                          <p className=\"title\">\r\n                            {this.state.appData.theApp.sellingPrice}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Cost of Development</p>\r\n                          <p className=\"title\">\r\n                            {this.state.appData.theApp.totalCostOfDevelopment}\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                          <p className=\"heading\">Revenue</p>\r\n                          <p className=\"title\">\r\n                            {this.state.appData.theApp.sellingPrice -\r\n                              this.state.appData.theApp.totalCostOfDevelopment}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"columns is-centered\">\r\n                    <div className=\"column is-half\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        icon=\"home\"\r\n                        onClick={() => {\r\n                          this.props.changeRoute(\"home\");\r\n                        }}\r\n                      >\r\n                        Go Home!\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div>\r\n                  <h1>\r\n                    {\" \"}\r\n                    You need to provide a month to be able to visualize more\r\n                    info!\r\n                  </h1>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon=\"home\"\r\n                    onClick={() => {\r\n                      this.props.changeRoute(\"home\");\r\n                    }}\r\n                  >\r\n                    Go Home!\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div>\r\n              <Icon\r\n                type=\"loading\"\r\n                style={{ marginTop: \"300px\" }}\r\n                theme=\"twoTone\"\r\n                twoToneColor=\"#52c41a\"\r\n              />\r\n              <h1>Loading...</h1>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Layout, Dropdown, Menu } from \"antd\";\nimport AuthService from \"../LoginComponents/auth-service\";\nconst { Header } = Layout;\n\nexport default class Topbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: props.theUser };\n    this.service = new AuthService();\n    this.userMenu = (\n      <Menu>\n        <Menu.Item>\n          <a onClick={this.logoutUser} rel=\"noopener noreferrer\" href=\"/\">\n            Logout\n          </a>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n\n  logoutUser = () => {\n    this.service\n      .logout()\n      .then(() => {\n        this.props.getTheUser(null);\n        this.setState({ loggedInUser: null });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <Header\n        style={{\n          background: \"#051525\",\n          padding: \"0 30px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        <span className=\"is-size-2 has-text-white\">\n          KYR{\" \"}\n          <span className=\"icon is-large theicon\">\n            <i className=\"fas fa-chart-line \" />\n          </span>\n        </span>\n        <Dropdown overlay={this.userMenu}>\n          <button className=\"ant-dropdown-link button is-danger is-small\">\n            {/* <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            {console.log(this.state.user.username */}\n\n            {this.state.loggedInUser.username}\n          </button>\n        </Dropdown>\n      </Header>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Layout, Menu, Icon } from \"antd\";\n\nconst { Sider } = Layout;\n\nconst SubMenu = Menu.SubMenu;\n\nexport default function Sidebar(props) {\n  return (\n    <Sider\n      collapsible\n      collapsed={props.collapsed}\n      onCollapse={props.handleOnCollapse}\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n        <Menu.Item\n          key=\"1\"\n          onClick={() => {\n            props.changeRoute(\"home\");\n          }}\n          style={{ paddingLeft: \"0\" }}\n        >\n          <Icon type=\"home\" />\n          <span>Home</span>\n        </Menu.Item>\n        <Menu.Item\n          key=\"2\"\n          onClick={() => {\n            props.changeRoute(\"newapp\");\n          }}\n        >\n          <Icon type=\"plus\" />\n          <span>New App</span>\n        </Menu.Item>\n\n        <Menu.Item\n          selected={true}\n          key=\"4\"\n          onClick={() => {\n            props.changeRoute(\"newmonth\");\n          }}\n        >\n          <Icon type=\"calendar\" />\n          <span>New Month</span>\n        </Menu.Item>\n\n        <Menu.Item\n          key=\"3\"\n          onClick={() => {\n            props.changeRoute(\"profile\");\n          }}\n        >\n          <Icon type=\"user\" />\n          <span>Profile</span>\n        </Menu.Item>\n\n        {/* <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <Icon type=\"user\" />\n              <span>User</span>\n            </span>\n          }\n        >\n          \n          {props.nameOfApps.map((objectWithName, index) => {\n            return (\n              <Menu.Item\n                key={index + 5}\n                onClick={() => {\n                  props.changeRoute(\"viewapp\", objectWithName.appID);\n                }}\n              >\n                {objectWithName.name}\n              </Menu.Item>\n            );\n          })}\n        </SubMenu> */}\n      </Menu>\n    </Sider>\n  );\n}\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Select,\r\n  Button,\r\n  InputNumber,\r\n  DatePicker\r\n} from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst { MonthPicker } = DatePicker;\r\n\r\nclass TheFormClass extends Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    nameOfAppsArray: [],\r\n    selectedApp: \"\",\r\n    selectedMonth: \"\",\r\n    selectedYear: \"\",\r\n    typeOfApp: \"\",\r\n    usersOfApp: [],\r\n    nameMonth: \"\",\r\n    appID: null\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const infoToSend = this.props.form.getFieldsValue();\r\n        infoToSend.month = this.state.selectedMonth;\r\n        infoToSend.year = this.state.selectedYear;\r\n        infoToSend.now = new Date();\r\n        infoToSend.nameMonth = this.state.nameMonth;\r\n\r\n        axios\r\n          .post(\r\n            \"https://find-your-reasons-back.herokuapp.com/app/newmonth/\" +\r\n              this.state.appID,\r\n            { infoToSend },\r\n            { withCredentials: true }\r\n          )\r\n          .then(response => {\r\n            this.props.statusNewMonth(\"good\");\r\n            this.props.form.resetFields();\r\n          })\r\n          .catch(err => {\r\n            this.props.statusNewMonth(\"bad\");\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  getAppNamesTypeAndUsers = () => {\r\n    axios\r\n      .get(\r\n        \"https://find-your-reasons-back.herokuapp.com/user/get-income-type\",\r\n        {\r\n          withCredentials: true\r\n        }\r\n      )\r\n      .then(response => {\r\n        this.setState({ nameOfAppsArray: response.data });\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getAppNamesTypeAndUsers();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 10,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n    const config = {};\r\n\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        {/* Input to select the app */}\r\n        <h1>Select the app to add the new month below</h1>\r\n        <Form.Item label=\"App to add Month\" hasFeedback>\r\n          {getFieldDecorator(\"selectedApp\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please select the App to add the new month\"\r\n              }\r\n            ],\r\n            onChange: e => {\r\n              const selApp = this.state.nameOfAppsArray.filter(objectApp => {\r\n                return objectApp.name === e;\r\n              });\r\n              this.setState({\r\n                selectedApp: e,\r\n                typeOfApp: selApp[0].type,\r\n                usersOfApp: selApp[0].users,\r\n                appID: selApp[0].appID\r\n              });\r\n            }\r\n          })(\r\n            <Select placeholder=\"Please select the app you want to add the new month to\">\r\n              {this.state.nameOfAppsArray.map((appObject, index) => {\r\n                return (\r\n                  <Option key={index} value={appObject.name}>\r\n                    {\" \"}\r\n                    {appObject.name}{\" \"}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n\r\n        {/* Conditional to check if the app is of SaSS type and display the calendar */}\r\n        {this.state.selectedApp !== \"\" ? (\r\n          this.state.typeOfApp === \"sell\" ? (\r\n            <p>\r\n              {\" \"}\r\n              Sorry, this app was registered with an income generetion type of\r\n              selling, you cannot add monthly info to it\r\n            </p>\r\n          ) : (\r\n            <>\r\n              <Form.Item label=\"Select the Month\">\r\n                {getFieldDecorator(\"selectedMonth\", {\r\n                  rules: [\r\n                    {\r\n                      type: \"object\",\r\n                      required: true,\r\n                      message: \"Please select time!\"\r\n                    }\r\n                  ],\r\n                  onChange: e => {\r\n                    if (e) {\r\n                      this.setState({\r\n                        selectedMonth: e.month(),\r\n                        selectedYear: e.year(),\r\n                        nameMonth: e.toString().split(\" \")[1]\r\n                      });\r\n                    }\r\n                  }\r\n                })(<MonthPicker />)}\r\n              </Form.Item>\r\n              <h1>\r\n                Indicate the subscription price charged to each of the user\r\n                types\r\n              </h1>\r\n              {this.state.usersOfApp.map((user, index) => {\r\n                return (\r\n                  <Form.Item label={user} key={index} hasFeedback>\r\n                    {getFieldDecorator(\"userPrice\" + index, {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input the price of the suscription\"\r\n                        }\r\n                      ]\r\n                    })(<InputNumber min={0} placeholder=\"0\" />)}\r\n                  </Form.Item>\r\n                );\r\n              })}\r\n\r\n              <h1>\r\n                Indicate the average number of each type of user during the\r\n                month\r\n              </h1>\r\n              {this.state.usersOfApp.map((user, index) => {\r\n                return (\r\n                  <Form.Item key={index} label={user}>\r\n                    {getFieldDecorator(\"userAmount\" + index, {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Please indicate the number of users\"\r\n                        }\r\n                      ]\r\n                    })(<InputNumber min={0} placeholder=\"0\" />)}\r\n                    <span className=\"ant-form-text\"> users </span>\r\n                  </Form.Item>\r\n                );\r\n              })}\r\n              <h1>Indicate the expenses of the month</h1>\r\n              <Form.Item label=\"Hosting\" hasFeedback>\r\n                {getFieldDecorator(\"hosting\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the monthly cost of your hosting\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Domain\" hasFeedback>\r\n                {getFieldDecorator(\"domain\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the monthly price of your domain\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Database\" hasFeedback>\r\n                {getFieldDecorator(\"database\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the monthly price of your datbase\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Bucket\" hasFeedback>\r\n                {getFieldDecorator(\"bucket\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input the monthly price of your bucket\"\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Others\" hasFeedback>\r\n                {getFieldDecorator(\"others\", {\r\n                  rules: [\r\n                    {\r\n                      required: true\r\n                    }\r\n                  ]\r\n                })(<InputNumber min={0} placeholder=\"0\" />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit month information!\r\n                </Button>\r\n              </Form.Item>\r\n            </>\r\n          )\r\n        ) : null}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst TheForm = Form.create({\r\n  name: \"register\"\r\n})(TheFormClass);\r\n\r\nexport default TheForm;\r\n\r\n{\r\n  /*  <Form.Item label=\"Name\" hasFeedback>\r\n              {getFieldDecorator(\"name\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input the name of your App\"\r\n                  }\r\n                ]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label={\r\n                <span>\r\n                  Size of the App&nbsp;\r\n                  <Tooltip title=\"Small for apps with 5,000 users or less, Medium for apps with 10,000 users or less and Big for apps over 10k\">\r\n                    <Icon type=\"question-circle-o\" />\r\n                  </Tooltip>\r\n                </span>\r\n              }\r\n            >\r\n              {getFieldDecorator(\"size\", {\r\n                rules: [{ required: true, message: \"Please select a size\" }]\r\n              })(\r\n                <Radio.Group>\r\n                  <Radio.Button value=\"small\">Small</Radio.Button>\r\n                  <Radio.Button value=\"medium\">Medium</Radio.Button>\r\n                  <Radio.Button value=\"big\">Big</Radio.Button>\r\n                </Radio.Group>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Income Generation\" hasFeedback>\r\n              {getFieldDecorator(\"incomeGeneration\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select the type of income of your app\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select placeholder=\"How do you plan to make money?\">\r\n                  <Option value=\"sell\">Selling my app</Option>\r\n                  <Option value=\"saas\">SaaS</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Select platforms\" hasFeedback>\r\n              {getFieldDecorator(\"supportedPlatforms\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Please select all the platforms\",\r\n                    type: \"array\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  placeholder=\"Please select the supported platforms\"\r\n                >\r\n                  <Option value=\"windows\">Windows</Option>\r\n                  <Option value=\"osx\">OSX</Option>\r\n                  <Option value=\"ios\">iOS</Option>\r\n                  <Option value=\"android\">Android</Option>\r\n                  <Option value=\"web\">Web App</Option>\r\n                  <Option value=\"other\">Other</Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Create new App!\r\n              </Button>\r\n            </Form.Item>\r\n          */\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MyBreadcrumb from \"../Breadcrumb\";\r\nimport TheForm from \"./TheForm\";\r\nimport Message from \"../NewApp/Message\";\r\n\r\nexport default class MainForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: props.theUser,\r\n      confirmation: null,\r\n      statusNewMonth: null\r\n    };\r\n  }\r\n\r\n  displayConfirmation = success => {\r\n    this.setState({ confirmation: success });\r\n  };\r\n\r\n  changeStatusNewMonth = status => {\r\n    this.setState({ statusNewMonth: status });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.statusNewMonth === \"good\" ? (\r\n          <Message\r\n            changeRoute={this.props.changeRoute}\r\n            message={<span>The new month has been added successfully.</span>}\r\n            typeOfMessage=\"success\"\r\n          />\r\n        ) : null}\r\n\r\n        {this.state.statusNewApp === \"bad\" ? (\r\n          <Message\r\n            changeRoute={this.props.changeRoute}\r\n            message={\r\n              <span>\r\n                Oops! Something went wrong :(, please try again later.\r\n              </span>\r\n            }\r\n            typeOfMessage=\"danger\"\r\n          />\r\n        ) : null}\r\n\r\n        <div className=\"container responsive-padding-sides\">\r\n          <MyBreadcrumb routes={[this.state.user.username, \"New Month\"]} />\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-three-quarters\">\r\n              <TheForm statusNewMonth={this.changeStatusNewMonth} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n\nimport { Layout } from \"antd\";\nimport axios from \"axios\";\nimport \"./../../App.css\";\n\nimport MainPage from \"./Panel/MainPage\";\nimport MainForm from \"./NewApp/MainForm\";\nimport UserProfile from \"./Profile/UserProfile\";\nimport ViewApp from \"./ViewApp/ViewApp\";\nimport Topbar from \"./Topbar\";\nimport Sidebar from \"./Sidebar\";\nimport NewMonth from \"./NewMonth/NewMonth\";\n\nconst { Content, Footer } = Layout;\n\nexport default class MyLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n      user: props.theUser,\n      isSmall: false,\n      currentRoute: \"home\"\n    };\n  }\n\n  updatePredicate = () => {\n    this.setState({ isSmall: window.innerWidth < 640 });\n  };\n\n  componentDidMount = () => {\n    this.updatePredicate();\n    window.addEventListener(\"resize\", this.updatePredicate);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"resize\", this.updatePredicate);\n  };\n\n  componentWillReceiveProps = nextProps => {\n    this.setState({ ...this.state, user: nextProps[\"theUser\"] });\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {this.state.isSmall ? null : (\n          <Sidebar\n            nameOfApps={this.state.nameOfApps}\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n            handleOnCollapse={this.onCollapse}\n            collapsed={this.state.collapsed}\n            changeRoute={this.props.changeRoute}\n          />\n        )}\n        <Layout style={{ backgroundColor: \"white\" }}>\n          <Topbar\n            getUser={this.props.getUser}\n            theUser={this.state.user}\n            changeRoute={this.props.changeRoute}\n            logoutUserTwo={this.props.logoutUserTwo}\n          />\n\n          <Content>\n            {this.props.theContent === \"home\" ? (\n              <MainPage\n                theUser={this.state.user}\n                changeRoute={this.props.changeRoute}\n              />\n            ) : null}\n\n            {this.props.theContent === \"newapp\" ? (\n              <MainForm\n                theUser={this.state.user}\n                changeRoute={this.props.changeRoute}\n              />\n            ) : null}\n\n            {this.props.theContent === \"newmonth\" ? (\n              <NewMonth\n                theUser={this.state.user}\n                changeRoute={this.props.changeRoute}\n              />\n            ) : null}\n\n            {this.props.theContent === \"profile\" ? (\n              <UserProfile theUser={this.state.user} />\n            ) : null}\n            {this.props.theContent === \"viewapp\" ? (\n              <ViewApp\n                theUser={this.state.user}\n                appID={this.props.appID}\n                changeRoute={this.props.changeRoute}\n              />\n            ) : null}\n          </Content>\n          <Footer\n            style={{\n              textAlign: \"center\",\n              background: \"coral\"\n            }}\n            className=\"margin-top\"\n          >\n            Creado por José Duarte utilizando{\" \"}\n            <a href=\"https://reactjs.org/\">React</a> y{\" \"}\n            <a href=\"https://ant.design\">AntDesign</a> 🖤\n          </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React from \"react\";\r\n\r\nexport default function WrongRoute() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-three-quarters\">\r\n          <img\r\n            src=\"/resources/error.png\"\r\n            alt=\"Not Found\"\r\n            style={{ maxHeight: \"150px\", marginTop: \"50px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"columns is-centered\">\r\n        <div className=\"column is-half\">\r\n          <p style={{ marginTop: \"50px\" }}>Sorry, check your route please :)</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Components/HomeComponents/Home\";\nimport WrappedNormalLoginForm from \"./Components/LoginComponents/Login\";\nimport WrappedNormalSignupForm from \"./Components/LoginComponents/Signup\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MyLayout from \"./Components/Layout/MyLayout\";\nimport AuthService from \"./Components/LoginComponents/auth-service\";\nimport WrongRoute from \"./Components/HomeComponents/WrongRoute\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      currentPath: \"home\",\n      idApp: \"\"\n    };\n    this.service = new AuthService();\n  }\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          console.log(\"fetch user\" + response);\n          console.log(response);\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  };\n\n  getTheUser = userObj => {\n    this.setState({ loggedInUser: userObj });\n  };\n\n  changeCurrentRoute = (route, appID) => {\n    this.setState({ currentPath: route, idApp: appID });\n  };\n\n  render() {\n    this.fetchUser();\n    if (this.state.loggedInUser) {\n      return (\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/home\"\n              render={() => (\n                <MyLayout\n                  theUser={this.state.loggedInUser}\n                  theContent={this.state.currentPath}\n                  changeRoute={this.changeCurrentRoute}\n                  appID={this.state.idApp}\n                  logoutUserTwo={this.logoutUserTwo}\n                />\n              )}\n            />\n            {/*  <Route\n              exact\n              path=\"/signup\"\n              render={() => (\n                <MyLayout\n                  theUser={this.state.loggedInUser}\n                  theContent={this.state.currentPath}\n                  changeRoute={this.changeCurrentRoute}\n                  appID={this.state.idApp}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signin\"\n              render={() => (\n                <MyLayout\n                  theUser={this.state.loggedInUser}\n                  theContent={this.state.currentPath}\n                  changeRoute={this.changeCurrentRoute}\n                  appID={this.state.idApp}\n                />\n              )}\n            /> */}\n            )} />\n          </Switch>\n          {/* <Route path=\"/\" render={() => <WrongRoute />} /> */}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/signin\"\n              render={() => (\n                <WrappedNormalLoginForm getUser={this.getTheUser} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => (\n                <WrappedNormalSignupForm getUser={this.getTheUser} />\n              )}\n            />\n            <Route path=\"/\" render={() => <WrongRoute />} />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}